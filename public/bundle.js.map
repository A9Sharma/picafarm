{"version":3,"sources":["bundle.js","app.js","component/farmerPage.js","component/farmerSearch.js","component/temp.js","controllers/mainCtrl.js","services/temp.js"],"names":["angular","module","config","component","bindings","farm","templateUrl","controller","$scope","$http","farmerArr","tester","get","then","response","console","log","data","catch","hideComponent","elements","document","getElementsByClassName","Array","isArray","i","length","classList","showComponent","toggle","_name","user","name","newName","arguments","grabFarmTitle"],"mappings":"AAAA;;ACAAA,QAAQC,OAAO,YAAY,IAC1BC,OAAO,YAAW;ADEnB;;AEHAF,QAAQC,OAAO,YAAYE,UAAU,cAAa;;EAEhDC,UAAU;IACRC,MAAO;;;;;EAKTC,aAAa;;;AFQf;;AGhBAN,QAAQC,OAAO,YAAYE,UAAU,gBAAe;;EAElDG,aAAa;EACbC,YAAY;;;ACHd;AJyBA;;AKzBAP,QAAQC,OAAO,YAAYM,WAAW,gCAAY,UAASC,QAAQC,OAAO;;;EAGxED,OAAOE,YAAY;EACnBF,OAAOG,SAAS;;EAGhBH,OAAOI,MAAM,YAAW;IACtBH,MAAMG,IAAI,WAAWC,KAAK,UAASC,UAAU;MAC3CC,QAAQC,IAAIF,SAASG;MACrBT,OAAOE,YAAYI,SAASG;OAC3BC,MAAM,UAASJ,UAAU;MAC1BC,QAAQC,IAAIF;;;;EAIhBN,OAAOW,gBAAgB,YAAW;IAChC,IAAIC,WAAWC,SAASC,uBAAuB;;;;;IAK/CP,QAAQC,IAAI,mCAAmCI;IAC/CL,QAAQC,IAAI,8BAA8BO,MAAMC,QAAQJ;;IAExD,KAAK,IAAIK,IAAI,GAAGA,IAAIL,SAASM,QAAQD,KAAK,GAAG;MAC3CV,QAAQC,IAAI,6CAA6CI,SAASK,GAAGE;;;;;;;EAOzEnB,OAAOoB,gBAAgB,YAAW;IAChC,IAAIR,WAAWC,SAASC,uBAAuB;;;;;IAK/CF,SAASO,UAAUE,OAAO;;;EAG5BrB,OAAOI;;EAEP,IAAIkB,QAAQ;EACZtB,OAAOuB,OAAO;IACZC,MAAM,SAAA,KAASC,SAAS;;;;;MAKvB,OAAOC,UAAUR,SAAUI,QAAQG,UAAWH;;;;EAIjDtB,OAAO2B,gBAAgB,UAASF,SAAS;IACvC,OAAOH,QAAQG;;;ACxDnB,aAAA","file":"bundle.js","sourcesContent":["'use strict';\n\nangular.module('picafarm', []).config(function () {});\n'use strict';\n\nangular.module('picafarm').component('farmerPage', {\n\n  bindings: {\n    farm: '<'\n  },\n\n  // controller: 'mainCtrl',  \n\n  templateUrl: 'views/farmerPage.html'\n\n});\n'use strict';\n\nangular.module('picafarm').component('farmerSearch', {\n\n  templateUrl: 'views/farmerSearch.html',\n  controller: 'mainCtrl'\n\n});\n\"use strict\";\n'use strict';\n\nangular.module('picafarm').controller('mainCtrl', function ($scope, $http) {\n\n  // this.farmers = {};\n  $scope.farmerArr = [];\n  $scope.tester = '!!! test !!!';\n\n  $scope.get = function () {\n    $http.get(\"/search\").then(function (response) {\n      console.log(response.data);\n      $scope.farmerArr = response.data;\n    }).catch(function (response) {\n      console.log(response);\n    });\n  };\n\n  $scope.hideComponent = function () {\n    var elements = document.getElementsByClassName('farms');\n    // if (elements.classList.contains('show')) {\n    //   elements.classList.remove('show');\n    // }\n    // elements.className += 'hide';\n    console.log('Logging what elements is here: ', elements);\n    console.log('Logging type of elements: ', Array.isArray(elements));\n\n    for (var i = 0; i < elements.length; i += 1) {\n      console.log('Logging what elements classList is here: ', elements[i].classList);\n    }\n\n    //console.log('Logging what elements classList is here: ',$scope.elements.classList);\n    // elements.classList.toggle('hide');\n  };\n\n  $scope.showComponent = function () {\n    var elements = document.getElementsByClassName('farms');\n    // if (elements.classList.contains('hide')) {\n    //   elements.classList.remove('hide');\n    // }\n    //elements.className += 'show';\n    elements.classList.toggle('show');\n  };\n\n  $scope.get();\n\n  var _name = 'Brian';\n  $scope.user = {\n    name: function name(newName) {\n      // Note that newName can be undefined for two reasons:\n      // 1. Because it is called as a getter and thus called with no arguments\n      // 2. Because the property should actually be set to undefined. This happens e.g. if the\n      //    input is invalid\n      return arguments.length ? _name = newName : _name;\n    }\n  };\n\n  $scope.grabFarmTitle = function (newName) {\n    return _name = newName;\n  };\n});\n\"use strict\";","angular.module('picafarm', [])\r\n.config(function() {\r\n\r\n});\r\n\r\n","angular.module('picafarm').component('farmerPage',{\n\n  bindings: {\n    farm : '<'\n  },\n\n  // controller: 'mainCtrl',  \n\n  templateUrl: 'views/farmerPage.html'\n\n});\n","angular.module('picafarm').component('farmerSearch',{\n\n  templateUrl: 'views/farmerSearch.html',\n  controller: 'mainCtrl'\n\n});\n","","angular.module('picafarm').controller('mainCtrl', function($scope, $http) {\n\n  // this.farmers = {};\n  $scope.farmerArr = [];\n  $scope.tester = '!!! test !!!';\n\n\n  $scope.get = function() {\n    $http.get(\"/search\").then(function(response) {\n      console.log(response.data);\n      $scope.farmerArr = response.data;\n    }).catch(function(response) {\n      console.log(response);\n    });\n  };\n\n  $scope.hideComponent = function() {\n    var elements = document.getElementsByClassName('farms');\n    // if (elements.classList.contains('show')) {\n    //   elements.classList.remove('show');\n    // }\n    // elements.className += 'hide';\n    console.log('Logging what elements is here: ', elements);\n    console.log('Logging type of elements: ', Array.isArray(elements));\n\n    for (var i = 0; i < elements.length; i += 1) {\n      console.log('Logging what elements classList is here: ', elements[i].classList);\n    }\n\n    //console.log('Logging what elements classList is here: ',$scope.elements.classList);\n   // elements.classList.toggle('hide');\n  };\n\n  $scope.showComponent = function() {\n    var elements = document.getElementsByClassName('farms');\n    // if (elements.classList.contains('hide')) {\n    //   elements.classList.remove('hide');\n    // }\n    //elements.className += 'show';\n    elements.classList.toggle('show');    \n  };\n\n  $scope.get();\n\n  var _name = 'Brian';\n  $scope.user = {\n    name: function(newName) {\n     // Note that newName can be undefined for two reasons:\n     // 1. Because it is called as a getter and thus called with no arguments\n     // 2. Because the property should actually be set to undefined. This happens e.g. if the\n     //    input is invalid\n     return arguments.length ? (_name = newName) : _name;\n    }\n  };\n\n  $scope.grabFarmTitle = function(newName) {\n    return _name = newName;\n  };\n});\n",""]}